{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/NewPostForm.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatusForm.jsx","components/Profile/ProfileStatus.jsx","components/Profile/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","imageSrc","alt","message","likeCount","NewPostForm","maxLength10","maxLengthCreator","initialValues","newText","onSubmit","values","newPostText","resetForm","addPost","validationSchema","component","name","error","type","MyPosts","React","memo","console","log","postComponents","posts","map","post","id","MyPostsContainer","connect","state","profilePage","ProfileStatusForm","status","onBlur","e","deActivateEditMode","currentTarget","value","handleBlur","autoFocus","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","newStatus","updateStatus","onDoubleClick","ProfileInfo","profile","photos","large","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","Profile","authorizedUserId","ProfileContainer","componentDidMount","userId","match","params","history","push","getUserProfileThunkCreator","getStatus","this","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.a31bdf83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__jJq0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"NewPostForm_error__3nXwI\"};","import s from './Post.module.css'\n\n\nconst Post = (props) => {\n  return (\n    <div className={s.item} >\n      <img src={props.imageSrc} alt='img'/>\n      {props.message}\n      <div>\n        like {props.likeCount}\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import React from 'react'\nimport { Field, Form, Formik, resetForm } from 'formik';\nimport { ErrorMessage } from 'formik';\nimport s from './NewPostForm.module.css'\nimport { maxLengthCreator } from '../../../helpers/validation/validation';\n\nconst NewPostForm = (props) => {\n\n\n  let addPost = (newPostText) => {\n    props.addPost(newPostText);\n  }\n\n  let maxLength10=maxLengthCreator(10);\n  \n  return (\n\n    <Formik\n      initialValues={{\n        newText: '' \n      }}\n      onSubmit={(values, {resetForm }) => {addPost(values.newText); resetForm({})}}\n      validationSchema={maxLength10}\n    >\n \n      <Form>\n        <Field component='textarea' name='newText' />\n        <ErrorMessage  className={s.error} name=\"newText\" component=\"div\" />\n        <button type='submit'>Add post</button>\n      </Form>\n    </Formik>\n  );\n}\n\nexport default NewPostForm;\n","import s from './MyPosts.module.css'\nimport Post from './Post/Post';\nimport React from 'react'\nimport NewPostForm from './NewPostForm';\n\n\nconst MyPosts = React.memo(props => {\n\n  console.log('render')\n\nconst postComponents = props.posts.map((post) => {\n  return <Post key={post.id} id={post.id} message={post.message} likeCount={post.likeCount} imageSrc={post.imageSrc}></Post>\n}\n)\n\n  return (\n    <div>\n      <NewPostForm addPost={props.addPost}/>\n      <div>\n        New post\n      </div>\n      <div>\n        {postComponents}\n      </div>\n\n    </div>\n  );\n})\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\nimport { addPost } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\n\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n  }\n}\n\n\n\nconst MyPostsContainer=connect(mapStateToProps, {addPost})(MyPosts);\n\nexport default MyPostsContainer;\n","import React from 'react';\r\nimport { Formik, Field } from 'formik';\r\n\r\n\r\nconst ProfileStatusForm = (props) => {\r\n\r\n    const handleBlur = (e)=>{\r\n        props.deActivateEditMode(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n    <Formik\r\n        initialValues={{\r\n            status: props.status\r\n        }}\r\n    >\r\n        <Field name='status' onBlur={e=>handleBlur(e)} autoFocus={true}>\r\n        </Field>\r\n    </Formik>\r\n    )\r\n}\r\nexport default ProfileStatusForm;","import React, { useEffect, useState } from 'react';\r\nimport ProfileStatusForm from './ProfileStatusForm';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = (newStatus) => {\r\n        props.updateStatus(newStatus);\r\n        setEditMode(false)\r\n    }\r\n\r\n\r\n    return <div>\r\n        {editMode\r\n            ? <ProfileStatusForm\r\n                deActivateEditMode={deActivateEditMode}\r\n                status={status}\r\n            />\r\n            : <span onDoubleClick={activateEditMode}> {status || '-----'}</span>\r\n        }\r\n    </div>\r\n\r\n\r\n}\r\nexport default ProfileStatus;","import ProfileStatus from \"./ProfileStatus\";\n\n\n\nconst ProfileInfo = (props) => {\n  return (\n    \n      <div>\n        <img src={props.profile.photos.large} alt='img'/>\n        <ProfileStatus \n          status={props.status}\n          updateStatus={props.updateStatus}/>\n        <div>Обо мне: {props.profile.aboutMe}</div>\n        <div>{props.profile.fullName}</div>\n        <div>{props.profile.lookingForAJob? 'ищу работу':'не ищу работу'}</div>\n        <div>{props.profile.lookingForAJobDescription}</div>\n        </div>\n     \n  );\n}\n\nexport default ProfileInfo;\n","import Preloader from '../../common/preloader';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo';\n\n\nconst Profile = (props) => {\n if (!props.profile){\n   return <Preloader/>\n }\n  return (\n   \n    <div>\n      <div >\n        <img alt='img' src='https://www.tourprom.ru/site_media/images/upload/2016/11/7/resortimage/nyachang.jpg'></img>\n      </div>\n      <ProfileInfo \n      profile={props.profile}\n      status={props.status}\n      updateStatus={props.updateStatus}\n      authorizedUserId={props.authorizedUserId}\n      />\n      <MyPostsContainer/>\n    </div>\n  );\n}\n\nexport default Profile;\n","import  React  from 'react';\nimport { getStatus, getUserProfileThunkCreator, updateStatus } from './../../redux/profile-reducer';\nimport Profile from './Profile';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { compose } from 'redux';\n\n\n\nclass ProfileContainer extends React.Component  {\n\n  componentDidMount = () => {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId\n      if (!userId) { this.props.history.push('/login') }\n    }\n\n    this.props.getUserProfileThunkCreator(userId);\n    this.props.getStatus(userId);\n}\n\n  render() {\n    return <Profile {...this.props} />;\n  }\n  \n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfileThunkCreator, getStatus, updateStatus}),\n  withRouter,\n  )(ProfileContainer)\n\n\n"],"sourceRoot":""}